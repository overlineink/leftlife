{"version":3,"file":"password-strength.umd.js","sources":["../../tmp/module/component/mat-password-strength/mat-password-strength.component.ts","../../tmp/module/animations/index.ts","../../tmp/module/component/mat-password-strength-info/mat-password-strength-info.component.ts","../../tmp/module/mat-password-strength.module.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {AbstractControl, FormControl, Validators} from '@angular/forms';\n\nexport enum Colors {\n  primary = 'primary',\n  accent = 'accent',\n  warn = 'warn'\n}\n\nexport enum Criteria {\n  at_least_eight_chars,\n  at_least_one_lower_case_char,\n  at_least_one_upper_case_char,\n  at_least_one_digit_char,\n  at_least_one_special_char,\n}\n\n@Component({\n  selector: 'mat-password-strength',\n  exportAs: 'matPasswordStrength',\n  template: `\n    <mat-progress-bar mode=\"determinate\"\n                      [color]=\"color\"\n                      [value]=\"strength\">\n    </mat-progress-bar>\n  `,\n  styles: [`\n\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatPasswordStrengthComponent implements OnInit, OnChanges {\n\n  @Input() password: string;\n  @Input() validators: Criteria[] = Object.keys(Criteria).map(key => Criteria[key]);\n  @Input() externalError: boolean;\n\n  @Input() enableLengthRule = true;\n  @Input() enableLowerCaseLetterRule = true;\n  @Input() enableUpperCaseLetterRule = true;\n  @Input() enableDigitRule = true;\n  @Input() enableSpecialCharRule = true;\n\n  @Input() min = 8;\n  @Input() max = 30;\n\n  @Output()\n  onStrengthChanged: EventEmitter<number> = new EventEmitter<number>();\n\n  criteriaMap = new Map<Criteria, RegExp>();\n\n  containAtLeastMinChars: boolean;\n  containAtLeastOneLowerCaseLetter: boolean;\n  containAtLeastOneUpperCaseLetter: boolean;\n  containAtLeastOneDigit: boolean;\n  containAtLeastOneSpecialChar: boolean;\n\n  passwordFormControl: AbstractControl = new FormControl();\n\n  private _strength = 0;\n\n  private _color: string;\n\n  ngOnInit(): void {\n    this.setRulesAndValidators();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    if ((changes.externalError && changes.externalError.firstChange) || changes.password.isFirstChange()) {\n      return;\n    } else if (changes.externalError && changes.externalError.currentValue) {\n      this._color = Colors.warn;\n      return;\n    } else {\n      this.password && this.password.length > 0 ?\n        this.calculatePasswordStrength() : this.reset();\n    }\n  }\n\n  get strength(): number {\n    return this._strength ? this._strength : 0;\n  }\n\n  get color(): string {\n\n    if (this._strength <= 20) {\n      return Colors.warn;\n    } else if (this._strength <= 80) {\n      return Colors.accent;\n    } else {\n      return Colors.primary;\n    }\n  }\n\n  private _containAtLeastMinChars(): boolean {\n    this.containAtLeastMinChars = this.password.length >= this.min;\n    return this.containAtLeastMinChars;\n  }\n\n  private _containAtLeastOneLowerCaseLetter(): boolean {\n    this.containAtLeastOneLowerCaseLetter =\n      this.criteriaMap\n        .get(Criteria.at_least_one_lower_case_char)\n        .test(this.password);\n    return this.containAtLeastOneLowerCaseLetter;\n  }\n\n  private _containAtLeastOneUpperCaseLetter(): boolean {\n    this.containAtLeastOneUpperCaseLetter =\n      this.criteriaMap\n        .get(Criteria.at_least_one_upper_case_char)\n        .test(this.password);\n    return this.containAtLeastOneUpperCaseLetter;\n  }\n\n  private _containAtLeastOneDigit(): boolean {\n    this.containAtLeastOneDigit =\n      this.criteriaMap\n        .get(Criteria.at_least_one_digit_char)\n        .test(this.password);\n    return this.containAtLeastOneDigit;\n  }\n\n  private _containAtLeastOneSpecialChar(): boolean {\n    this.containAtLeastOneSpecialChar =\n      this.criteriaMap\n        .get(Criteria.at_least_one_special_char)\n        .test(this.password);\n    return this.containAtLeastOneSpecialChar;\n  }\n\n  setRulesAndValidators(): void {\n    if (this.enableLengthRule) {\n      this.criteriaMap.set(Criteria.at_least_eight_chars, RegExp(`^.{${this.min},${this.max}$`));\n    }\n    if (this.enableLowerCaseLetterRule) {\n      this.criteriaMap.set(Criteria.at_least_one_lower_case_char, RegExp(/^(?=.*?[a-z])/));\n    }\n    if (this.enableUpperCaseLetterRule) {\n      this.criteriaMap.set(Criteria.at_least_one_upper_case_char, RegExp(/^(?=.*?[A-Z])/));\n    }\n    if (this.enableDigitRule) {\n      this.criteriaMap.set(Criteria.at_least_one_digit_char, RegExp(/^(?=.*?[0-9])/));\n    }\n    if (this.enableSpecialCharRule) {\n      this.criteriaMap.set(Criteria.at_least_one_special_char, RegExp(/^(?=.*?[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])/));\n    }\n\n    this.passwordFormControl.setValidators(Validators.pattern(this.criteriaMap.get(Criteria.at_least_eight_chars)));\n\n    this.validators.map(criteria => {\n      this.passwordFormControl.setValidators(Validators.pattern(this.criteriaMap.get(criteria)));\n    })\n\n  }\n\n  calculatePasswordStrength(): void {\n    const requirements: Array<boolean> = [];\n    const unit = 100 / this.criteriaMap.size;\n\n    // console.log('this.criteriaMap.size = ', this.criteriaMap.size);\n    // console.log('unit = ', unit);\n\n    requirements.push(\n      this.enableLengthRule ? this._containAtLeastMinChars() : false,\n      this.enableLowerCaseLetterRule ? this._containAtLeastOneLowerCaseLetter() : false,\n      this.enableUpperCaseLetterRule ? this._containAtLeastOneUpperCaseLetter() : false,\n      this.enableDigitRule ? this._containAtLeastOneDigit() : false,\n      this.enableSpecialCharRule ? this._containAtLeastOneSpecialChar() : false);\n\n    this._strength = requirements.filter(v => v).length * unit;\n    // console.log('length = ', this._strength / unit);\n    this.onStrengthChanged.emit(this.strength);\n  }\n\n  reset() {\n    this._strength = 0;\n    this.containAtLeastMinChars =\n      this.containAtLeastOneLowerCaseLetter =\n        this.containAtLeastOneUpperCaseLetter =\n          this.containAtLeastOneDigit =\n            this.containAtLeastOneSpecialChar = false;\n  }\n}\n","import {animate, animation, AnimationReferenceMetadata, keyframes, style} from '@angular/animations';\n\nexport function flipIn(timing: number, rotateX: number, rotateY: number): AnimationReferenceMetadata {\n  const params = {timing: timing, delay: 0, rotateX, rotateY};\n\n  return animation(\n    [\n      style({'backface-visibility': 'visible'}),\n      animate(\n        '{{ timing }}s {{ delay }}s ease-in',\n        keyframes([\n          style({\n            opacity: 0,\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\n            offset: 0,\n          }),\n          style({\n            opacity: 1,\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\n            offset: 0.4,\n          }),\n          style({\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\n            offset: 0.6,\n          }),\n          style({\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\n            offset: 0.8,\n          }),\n          style({\n            transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\n            offset: 1,\n          }),\n        ])\n      ),\n    ],\n    {params}\n  );\n}\n\nexport const flipInX = flipIn(1, 1, 0);\nexport const flipInY = flipIn(1, 0, 1);\n\nexport const shake = animation(\n  animate(\n    '{{ timing }}s {{ delay }}s',\n    keyframes([\n      style({transform: 'translate3d(0, 0, 0)', offset: 0}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.1}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.2}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.3}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.4}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.5}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.6}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.7}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.8}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.9}),\n      style({transform: 'translate3d(0, 0, 0)', offset: 1}),\n    ])\n  ),\n  {params: {timing: 1, delay: 0}}\n);\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatPasswordStrengthComponent} from '../mat-password-strength/mat-password-strength.component';\nimport {animate, animateChild, keyframes, query, stagger, style, transition, trigger, useAnimation} from '@angular/animations';\nimport {shake} from '../../animations/index';\n\n@Component({\n  selector: 'mat-password-strength-info',\n  exportAs: 'matPasswordStrengthInfo',\n  template: `\n    <mat-card @list>\n      <mat-card-content>\n        <div class=\"info-row\" @items *ngIf=\"passwordComponent.enableLowerCaseLetterRule\">\n          <div *ngIf=\"passwordComponent.containAtLeastOneLowerCaseLetter; then done else error\" @flipY>\n          </div>\n          <ng-template #done>\n            <mat-icon @positiveState color=\"primary\">done</mat-icon>\n          </ng-template>\n          <ng-template #error>\n            <mat-icon @negativeState color=\"warn\">error</mat-icon>\n          </ng-template>\n          <div>\n            <p>{{lowerCaseCriteriaMsg}}</p>\n          </div>\n        </div>\n\n        <div class=\"info-row\" @items *ngIf=\"passwordComponent.enableUpperCaseLetterRule\">\n          <div *ngIf=\"passwordComponent.containAtLeastOneUpperCaseLetter; then done else error\">\n          </div>\n          <ng-template #done>\n            <mat-icon @positiveState color=\"primary\">done</mat-icon>\n          </ng-template>\n          <ng-template #error>\n            <mat-icon @negativeState color=\"warn\">error</mat-icon>\n          </ng-template>\n          <div>\n            <p>{{upperCaseCriteriaMsg}}</p>\n          </div>\n        </div>\n\n        <div class=\"info-row\" @items *ngIf=\"passwordComponent.enableDigitRule\">\n          <div *ngIf=\"passwordComponent.containAtLeastOneDigit; then done else error\">\n          </div>\n          <ng-template #done>\n            <mat-icon @positiveState color=\"primary\">done</mat-icon>\n          </ng-template>\n          <ng-template #error>\n            <mat-icon @negativeState color=\"warn\">error</mat-icon>\n          </ng-template>\n          <div>\n            <p>{{digitsCriteriaMsg}}</p>\n          </div>\n        </div>\n\n        <div class=\"info-row\" @items *ngIf=\"passwordComponent.enableSpecialCharRule\">\n          <div *ngIf=\"passwordComponent.containAtLeastOneSpecialChar; then done else error\">\n          </div>\n          <ng-template #done>\n            <mat-icon @positiveState color=\"primary\">done</mat-icon>\n          </ng-template>\n          <ng-template #error>\n            <mat-icon @negativeState color=\"warn\">error</mat-icon>\n          </ng-template>\n          <div>\n            <p>{{specialCharsCriteriaMsg}}</p>\n          </div>\n        </div>\n\n        <div class=\"info-row\" @items *ngIf=\"passwordComponent.enableLengthRule\">\n          <div *ngIf=\"passwordComponent.containAtLeastMinChars; then done else error\">\n          </div>\n          <ng-template #done>\n            <mat-icon @positiveState color=\"primary\">done</mat-icon>\n          </ng-template>\n          <ng-template #error>\n            <mat-icon @negativeState color=\"warn\">error</mat-icon>\n          </ng-template>\n          <div>\n            <p>{{minCharsCriteriaMsg}}</p>\n          </div>\n        </div>\n\n        <div *ngIf=\"enableScoreInfo\" class=\"info-row\" @items>\n          <div *ngIf=\"passwordComponent.strength === 100; then done else error\">\n          </div>\n          <ng-template #done>\n            <mat-icon @positiveState color=\"primary\">done</mat-icon>\n          </ng-template>\n          <ng-template #error>\n            <mat-icon @negativeState color=\"warn\">error</mat-icon>\n          </ng-template>\n          <div>\n            <p>Password's strength = {{passwordComponent.strength}} %100</p>\n          </div>\n        </div>\n\n      </mat-card-content>\n    </mat-card>\n  `,\n  styles: [`\n    mat-card{flex-direction:row;place-content:stretch center;flex:1 1 0%}mat-card,mat-card mat-card-content{box-sizing:border-box;display:flex;align-items:stretch}mat-card mat-card-content{flex-direction:column;max-width:100%;place-content:stretch flex-start}mat-card mat-card-content mat-icon{margin-right:10px}mat-card mat-card-content .info-row{flex-direction:row;box-sizing:border-box;display:flex}\n  `],\n  animations: [\n    // nice stagger effect when showing existing elements\n    trigger('list', [\n      transition(':enter', [\n        // child animation selector + stagger\n        query('@items',\n          stagger(300, animateChild())\n        )\n      ]),\n    ]),\n    trigger('items', [\n      // cubic-bezier for a tiny bouncing feel\n      transition(':enter', [\n        style({transform: 'scale(0.5)', opacity: 0}),\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\n          style({transform: 'scale(1)', opacity: 1}))\n      ]),\n      transition(':leave', [\n        style({transform: 'scale(1)', opacity: 1, height: '*'}),\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\n          style({transform: 'scale(0.5)', opacity: 0, height: '0px', margin: '0px'}))\n      ]),\n    ]),\n    trigger('positiveState', [\n      transition(':enter', [\n        style({'backface-visibility': 'visible'}),\n        animate(\n          '{{ timing }}s {{ delay }}s ease-in',\n          keyframes([\n            style({\n              opacity: 0,\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\n              offset: 0,\n            }),\n            style({\n              opacity: 1,\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\n              offset: 0.4,\n            }),\n            style({\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\n              offset: 0.6,\n            }),\n            style({\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\n              offset: 0.8,\n            }),\n            style({\n              transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\n              offset: 1,\n            }),\n          ])\n        ),\n      ], {params: {timing: 1, delay: 0, rotateX: 1, rotateY: 0}}),\n    ]),\n    trigger('negativeState', [\n      transition(':enter', useAnimation(shake)),\n    ]),\n  ],\n})\nexport class MatPasswordStrengthInfoComponent implements OnInit {\n\n  @Input()\n  passwordComponent: MatPasswordStrengthComponent;\n\n  @Input()\n  enableScoreInfo = false;\n\n  @Input()\n  lowerCaseCriteriaMsg = 'contains at least one lower character';\n\n  @Input()\n  upperCaseCriteriaMsg = 'contains at least one upper character';\n\n  @Input()\n  digitsCriteriaMsg = 'contains at least one digit character';\n\n  @Input()\n  specialCharsCriteriaMsg = 'contains at least one special character';\n\n  @Input()\n  minCharsCriteriaMsg: string;\n\n  ngOnInit(): void {\n    if (!this.minCharsCriteriaMsg) {\n      this.minCharsCriteriaMsg = `contains at least ${this.passwordComponent.min} characters`\n    }\n  }\n\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule, ModuleWithProviders} from '@angular/core';\nimport {MatCardModule, MatIconModule, MatProgressBarModule} from '@angular/material';\n\nimport {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';\nimport {\n  MatPasswordStrengthInfoComponent\n} from './component/mat-password-strength-info/mat-password-strength-info.component';\n\n// Export module's public API\nexport {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';\nexport {\n  MatPasswordStrengthInfoComponent\n} from './component/mat-password-strength-info/mat-password-strength-info.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatProgressBarModule,\n    MatCardModule,\n    MatIconModule\n  ],\n  exports: [MatPasswordStrengthComponent, MatPasswordStrengthInfoComponent],\n  declarations: [MatPasswordStrengthComponent, MatPasswordStrengthInfoComponent]\n})\nexport class MatPasswordStrengthModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MatPasswordStrengthModule,\n      providers: []\n    };\n  }\n}\n"],"names":["EventEmitter","FormControl","Validators","Component","ChangeDetectionStrategy","Input","Output","animation","style","animate","keyframes","trigger","transition","query","stagger","animateChild","useAnimation","NgModule","CommonModule","MatProgressBarModule","MatCardModule","MatIconModule"],"mappings":"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"}