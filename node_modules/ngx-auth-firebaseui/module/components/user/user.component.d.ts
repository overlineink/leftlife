import { EventEmitter, OnInit } from '@angular/core';
import { AngularFireAuth } from '@angular/fire/auth';
import { MatFormFieldAppearance, MatSnackBar } from '@angular/material';
import { AuthProcessService } from '../../services/auth-process.service';
import { AbstractControl, FormGroup } from '@angular/forms';
import { FirestoreSyncService } from '../../services/firestore-sync.service';
import { NgxAuthFirebaseUIConfig } from '../../ngx-auth-firebase-u-i.module';
export declare class UserComponent implements OnInit {
    config: NgxAuthFirebaseUIConfig;
    auth: AngularFireAuth;
    authProcess: AuthProcessService;
    private _fireStoreService;
    private snackBar;
    editMode: boolean;
    canLogout: boolean;
    canDeleteAccount: boolean;
    appearance: MatFormFieldAppearance;
    onAccountDeleted: EventEmitter<void>;
    updateFormGroup: FormGroup;
    updateNameFormControl: AbstractControl;
    updateEmailFormControl: AbstractControl;
    updatePhoneNumberFormControl: AbstractControl;
    updatePasswordFormControl: AbstractControl;
    constructor(config: NgxAuthFirebaseUIConfig, auth: AngularFireAuth, authProcess: AuthProcessService, _fireStoreService: FirestoreSyncService, snackBar: MatSnackBar);
    ngOnInit(): void;
    protected initUpdateFormGroup(): void;
    changeEditMode(): void;
    reset(): void;
    save(): Promise<void>;
    /**
     * Delete the account of the current firebase user
     *
     * On Success, emit the <onAccountDeleted> event and toast a msg!#
     * Otherwise, log the and toast and error msg!
     *
     */
    deleteAccount(): Promise<void>;
}
